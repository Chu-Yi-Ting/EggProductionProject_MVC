@{
    Layout = "_FrontLayout_store";
}

@section Styles {
    <style>
        .cart-card .cart-card-owner .all-choose {
            color: var(--main-color);
        }

        .hasCarriers {
            display: none
        }

        .noCarriers {
            font-weight: 600
        }

        .store-body-outer .pagebody-store .accordion-item .accordion-body .other-info .default {
            font-size: 10px;
            color: #d8b45c;
            font-weight: 700;
            border: none;
            border-radius: 40px;
            padding: 0px;
        }

        .change_address {
            padding: 0px 5px;
        }



        .accordion-item .accordion-button.disabled {
            pointer-events: none;
            opacity: 0.5;
        }


        .store-body-outer .pagebody-store .accordion-item .accordion-button.disabled::after {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23b8860b'%3e%3ccircle cx='8' cy='8' r='7' stroke='%23b8860b' stroke-width='1' fill='none'/%3e%3cline x1='4' y1='4' x2='12' y2='12' stroke='%23b8860b' stroke-width='1'/%3e%3cline x1='12' y1='4' x2='4' y2='12' stroke='%23b8860b' stroke-width='1'/%3e%3c/svg%3e");
        }

        .form-control-sm {
            font-size: 12px;
            font-weight: 500;
            color: #727272;
        }

    </style>
}

<div class="col-12">
    <div class="page-title">
        <h5 class="mb-3 d-flex justify-content-between w-100">
            物流設定
            <span class="d-flex">
                <a class="btn light-btn-n btn-sm-dbrs changeOpen" data-bs-toggle="modal" href="#exampleModalToggle5" role="button">物流開放</a>
                <a class="btn  light-btn-n btn-sm-dbrs ms-3 addAddress" data-bs-toggle="modal" href="#exampleModalToggle" role="button">新增地址</a>
            </span>
        </h5>
    </div>
</div>
<div class="col-lg-12 mt-3 " id="accordionExample1">
    <div class="accordion" id="accordionExample">
        <div class="accordion-item mb-4 ">
            <h2 class="accordion-header" id="heading1">
                <button class="accordion-button collapsed disabled" type="button" data-bs-toggle="collapse" data-bs-target="#collapse1" aria-expanded="false" aria-controls="collapse1">
                    宅配 <img src="../../FrontstageTemplate/assets/brand/common/blackcat_logo.svg" alt="宅配">
                </button>
            </h2>
            <div id="collapse1" class="accordion-collapse collapse disabled" aria-labelledby="heading1" data-bs-parent="#accordionExample1">
                <div class="accordion-body">
                </div>
            </div>
        </div>
        <div class="accordion-item mb-4 ">
            <h2 class="accordion-header" id="heading2">
                <button class="accordion-button collapsed disabled" type="button" data-bs-toggle="collapse" data-bs-target="#collapse2" aria-expanded="false" aria-controls="collapse2">
                    超商 <img src="../../FrontstageTemplate/assets/brand/common/seven-logo.png" alt="超商">
                </button>
            </h2>
            <div id="collapse2" class="accordion-collapse collapse disabled" aria-labelledby="heading2" data-bs-parent="#accordionExample1">
                <div class="accordion-body">
                </div>
            </div>
        </div>

    </div>
</div>


<div class="modal modal-n fade"
     id="exampleModalToggle"
     aria-hidden="true"
     aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header px-4 mx-4 pb-0 mt-2">
                <h5 class="modal-title" id="exampleModalToggleLabel">
                    新增物流
                    <span class="ms-3">
                        <nav class="nav">
                            <ul class="nav tab_n" id="myTab" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <a class="nav-link active"
                                       id="home-tab"
                                       data-bs-toggle="tab"
                                       href="#home"
                                       role="tab"
                                       aria-controls="home"
                                       aria-selected="true">新增超商</a>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <a class="nav-link"
                                       id="profile-tab"
                                       data-bs-toggle="tab"
                                       href="#profile"
                                       role="tab"
                                       aria-controls="profile"
                                       aria-selected="false">新增宅配</a>
                                </li>
                            </ul>
                        </nav>
                    </span>
                </h5>

                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="col-lg-12">
                    <div class="w-100 d-flex flex-column mx-auto px-lg-3 mt-lg-0">
                        <div class="form-control-n addressName">
                            <div class="title mb-2 d-flex justify-content-between">
                                <div class="allcoin">收貨人姓名<span></span></div>
                            </div>
                            <input class="form-control form-control-sm" 
                                   type="text"
                                   placeholder=""
                                   aria-label="" />
                        </div>
                        <div class="form-control-n mt-3 addressPhone">
                            <div class="title mb-2 d-flex justify-content-between">
                                <div class="allcoin">聯繫方式<span></span></div>
                            </div>
                            <input class="form-control form-control-sm"
                                   type="text"
                                   placeholder=""
                                   aria-label="" />
                        </div>

                        <div class="tab-content" id="myTabContent">
                            <div class="tab-pane fade show active"
                                 id="home"
                                 role="tabpanel"
                                 aria-labelledby="home-tab">
                                <div class="form-control-n mt-3">
                                    <div class="title mb-2 d-flex justify-content-between">
                                        <div class="allcoin">門市選擇<span></span></div>
                                    </div>
                                    <button class="btn light-btn-n" type="button">
                                        新增 / 調整地址
                                    </button>
                                </div>
                                <div class="accordion-item mt-4">
                                    <div class="accordion-body">
                                        <div class="other-info d-flex flex-column flex-lg-row py-3">
                                            <div class="w-100 mx-auto">
                                                <div class="part form-control-n">
                                                    <div class="carrier-type w-100 d-flex justify-content-between pb-2">
                                                        <p class="d-flex align-items-center mb-0">
                                                            7-ELEVEN<span>超商</span>
                                                        </p>
                                                    </div>
                                                    <div class="carrier-address d-flex flex-column flex-xl-row">
                                                        <p class="address me-2 m-0 d-none" id="haveStore">
                                                            <span class="me-1 storeName">
                                                                鑫復門市 |
                                                            </span>
                                                            <span class="me-1 mb-2 storeId">155083</span><br />
                                                            <div id="haveStore_detail" class="d-none">台北市大安區信義路三段178號1樓</div>
                                                        </p>
                                                        <p class="address me-2 m-0" id="noStore">
                                                            暫無門市資訊
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade"
                                 id="profile"
                                 role="tabpanel"
                                 aria-labelledby="profile-tab">
                                <div class="form-control-n mt-3">
                                    <div class="title mb-2 d-flex justify-content-between">
                                        <div class="allcoin">取貨地址<span></span></div>
                                    </div>
                                    <input class="form-control form-control-sm"
                                           type="text"
                                           placeholder=""
                                           aria-label="" />
                                </div>
                                <div class="form-control-n mt-3">
                                    <div class="title mb-2 d-flex justify-content-between">
                                        <div class="allcoin">配送服務<span></span></div>
                                    </div>
                                    <select class="select-n" name="state">
                                        <option value="2">常溫</option>

                                        <option value="1">低溫</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="cart-card bg-none mt-4">
                            <div class="cart-card-item p-0">
                                <input type="checkbox"
                                       class="hidden-box"
                                       id="s1_p202409010003"
                                       checked="" />
                                <label for="s1_p202409010003" class="check--label">
                                    <span class="check--label-box ms-0 me-2"></span>
                                    <span class="checktext">設為預設地址</span>
                                </label>
                            </div>
                        </div>

                        <div class="w-100 submit mt-4 mb-3">
                            <button class="btn dark-btn-n" type="button" id="updateAddress">
                                確定新增
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal modal-n fade"
     id="exampleModalToggle5"
     aria-hidden="true"
     aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header px-4 mx-4 pb-0 mt-2">
                <h5 class="modal-title mb-2" id="exampleModalToggleLabel">
                    物流開放設定
                    <span class="ms-3"> </span>
                </h5>

                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body mx-2">
                <div class="col-lg-12">
                    <div class="d-flex carries_open mt-2">
                        <div class="d-flex w-100 align-items-center">
                            <p class="m-0">宅配</p>
                            <img src="~/FrontstageTemplate/assets/brand/common/blackcat_logo.svg"
                                 alt="" />
                        </div>
                        <div class="form-check form-switch">
                            <input class="form-check-input"
                                   type="checkbox"
                                   role="switch"
                                   id="SwitchHome"
                                   checked />
                        </div>
                    </div>

                    <div class="d-flex carries_open my-4">
                        <div class="d-flex w-100 align-items-center">
                            <p class="m-0">超商</p>
                            <img src="~/FrontstageTemplate/assets/brand/common/seven-logo.png"
                                 alt="" />
                        </div>
                        <div class="form-check form-switch">
                            <input class="form-check-input"
                                   type="checkbox"
                                   role="switch"
                                   id="SwitchStore"
                                   checked />
                        </div>
                    </div>

                    <div class="w-100 submit pt-2 mb-3">
                        <button class="btn dark-btn-n updateOpen" type="button">
                            保存
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal modal-n fade"
     id="exampleModalToggle3"
     aria-hidden="true"
     aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header px-4 mx-4 pb-0 mt-2">
                <h5 class="modal-title mb-2" id="exampleModalToggleLabel">
                    新增宅配
                    <span class="ms-3"> </span>
                </h5>

                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body mx-2">
                <div class="col-lg-12">
                    <div class="form-control-n addressName">
                        <div class="title mb-2 d-flex justify-content-between">
                            <div class="allcoin">收貨人姓名<span></span></div>
                        </div>
                        <input class="form-control form-control-sm"
                               type="text"
                               placeholder=""
                               aria-label="" />
                    </div>
                    <div class="form-control-n mt-3 addressPhone">
                        <div class="title mb-2 d-flex justify-content-between">
                            <div class="allcoin">聯繫方式<span></span></div>
                        </div>
                        <input class="form-control form-control-sm"
                               type="text"
                               placeholder=""
                               aria-label="" />
                    </div>

                    <div class="form-control-n mt-3 address">
                        <div class="title mb-2 d-flex justify-content-between">
                            <div class="allcoin">取貨地址<span></span></div>
                        </div>
                        <input class="form-control form-control-sm"
                               type="text"
                               placeholder=""
                               aria-label="" />
                    </div>

                    <div class="cart-card bg-none mt-4 carryway">
                        <div class="cart-card-item p-0">
                            <input type="checkbox"
                                   class="hidden-box"
                                   id="s1_p202409010004"
                                   checked="" />
                            <label for="s1_p202409010004"
                                   class="check--label w-100">
                                <span class="check--label-box ms-0 me-2"></span>
                                <div>
                                    <span class="checktext">
                                        採用低溫配送服務
                                        <img src="~/FrontstageTemplate/assets/brand/common/octicon_info-16.svg"
                                             alt=""
                                             srcset="" />
                                    </span>
                                    <span class="checktext text-gray">僅宅配提供</span>
                                </div>
                                <p class="m-0 ms-auto checktext-money">$160</p>
                            </label>
                        </div>
                    </div>

                    <div class="w-100 submit mt-4 mb-3">
                        <button class="btn dark-btn-n" type="button">
                            確定送出
                        </button>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal modal-n fade"
     id="exampleModalToggle4"
     aria-hidden="true"
     aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header px-4 mx-4 pb-0 mt-2">
                <h5 class="modal-title mb-2" id="exampleModalToggleLabel">
                    新增超商
                    <span class="ms-3"> </span>
                </h5>

                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body mx-2">
                <div class="col-lg-12">
                    <div class="store-body-outer">
                        <div class="pagebody-store m-0">
                            <div class="form-control-n addressName">
                                <div class="title mb-2 d-flex justify-content-between">
                                    <div class="allcoin">收貨人姓名<span></span></div>
                                </div>
                                <input class="form-control form-control-sm"
                                       type="text"
                                       placeholder=""
                                       aria-label="" />
                            </div>
                            <div class="form-control-n mt-3 addressPhone">
                                <div class="title mb-2 d-flex justify-content-between">
                                    <div class="allcoin">聯繫方式<span></span></div>
                                </div>
                                <input class="form-control form-control-sm"
                                       type="text"
                                       placeholder=""
                                       aria-label="" />
                            </div>

                            <div class="form-control-n mt-3 ">
                                <div class="title mb-2 d-flex justify-content-between">
                                    <div class="allcoin">門市選擇<span></span></div>
                                </div>
                                <button class="btn light-btn-n" type="button">
                                    新增 / 調整地址
                                </button>
                            </div>
                            <div class="accordion-item mt-4">
                                <div class="accordion-body">
                                    <div class="other-info d-flex flex-column flex-lg-row py-3">
                                        <div class="w-100 mx-auto">
                                            <div class="part form-control-n">
                                                <div class="carrier-type w-100 d-flex justify-content-between pb-2">
                                                    <p class="d-flex align-items-center mb-0">
                                                        7-ELEVEN<span>超商</span>
                                                    </p>
                                                </div>
                                                <div class="carrier-address d-flex flex-column flex-xl-row">
                                                    <p class="address me-2 m-0">
                                                        <span class="me-1 storeName">忠孝東門市 | </span>
                                                        <span class="me-1 mb-2 storeId">225436</span><br />
                                                        <div>台北市中正區忠孝東路一段72號76號1樓</div>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="cart-card bg-none mt-4">
                                <div class="cart-card-item p-0">
                                    <label class="check--label w-100">
                                        <span class="checktext">
                                            常溫配送價格
                                            <img src="~/FrontstageTemplate/assets/brand/common/octicon_info-16.svg"
                                                 alt=""
                                                 srcset="" />
                                        </span>
                                        <p class="m-0 ms-auto checktext-money">$60</p>
                                    </label>
                                </div>
                            </div>

                            <div class="w-100 submit mt-4 mb-3">
                                <button class="btn dark-btn-n" type="button">
                                    確定送出
                                </button>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
</div>







@section Scripts {
    <script>
        //更改select樣式
        document.addEventListener("DOMContentLoaded", function () {
            const elements = document.querySelectorAll(".select-n");
            elements.forEach(function (element) {
                new Choices(element, {
                    searchEnabled: false,
                    itemSelectText: "",
                });
            });
        });


        $(document).ready(function () {

            const nowId = '@ViewBag.MemberSid';

            //主畫面列出當前所有資料
            const loadBuyCarts1 = async (storeId) => {
                const api = '@Url.Content("~/Frontstage/CartsAPI/AddressList")';
                const BuyData1 = {
                    "Msid": nowId,
                    "storeSid": storeId
                };

                try {
                    const response = await fetch(api, {
                        method: 'POST',
                        body: JSON.stringify(BuyData1),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });



                    const data = await response.json();
                    console.log("data", data)

                    const generateProductsHtml = (addresses) => {
                        return addresses.map(address => {
                            const storeNameClass = address.storeName ? '' : 'd-none';
                            const defaultClass = address.addressFirst === 1 ? '' : 'd-none';
                            const storeSid = BuyData1.storeSid;


                            // const storeNameClass = address.storeName ? '' : 'd-none';
                            const showFirstButton = address.storeName ? '' : 'd-none';
                            const showSecondButton = address.storeName ? 'd-none' : '';

                            return `


                                                <div class="other-info d-flex flex-column flex-lg-row s_${storeSid}" id="flexRadioDefault${address.carrierAddressSid}">
                                        <div class="w-100 mx-auto">
                                                    <div class="part form-control-n w-100">
                                                <div class="carrier-type w-100 d-flex justify-content-between pb-1">
                                                    <p class="d-flex align-items-center mb-0">
                                                                        ${address.carrierName}<span class="way_no${address.carrierWayNo}">${address.way}</span>
                                                    </p>
                                                    <div class="d-flex justify-content-center align-items-center">
                                                        <button class="btn track-info p-0" data-deletesid="${address.carrierAddressSid}">刪除</button>


                                                                                            <a class="btn track-info ms-3 p-0 ${showSecondButton} " data-bs-toggle="modal" href="#exampleModalToggle3" role="button"  data-edit="${address.carrierAddressSid}">編輯</a>
                                <a class="btn track-info ms-3 p-0 ${showFirstButton}" data-bs-toggle="modal" href="#exampleModalToggle4" role="button" data-edit="${address.carrierAddressSid}">編輯</a>


                                                    </div>
                                                </div>
                                                <div class="carrier-address d-flex flex-column flex-xl-row">
                                                    <div class="d-flex mt-1 mt-md-0">
                                                                <p class="name me-2 m-0">${address.recordName}</p>
                                                                <p class="phone me-2 m-0">${address.recordPhone}</p>
                                                    </div>

                                                            <p class="address me-2 m-0">
                                                                                                    <span class="me-1 ${storeNameClass}">${address.storeName}  | </span>${address.adress}
                                                                                                </p>
                                                </div>
                                                        <p class="default me-2 m-0 ${defaultClass}">預設</p>
                                            </div>
                                        </div>
                                        </div>


                                                `;
                        }).join('<hr class="m-0" />');
                    };

                    const defaultCarriers = [
                        { carrierNo: 1, displayText: '宅配', imageSrc: '../../FrontstageTemplate/assets/brand/common/blackcat_logo.svg', addresses: [] },
                        { carrierNo: 2, displayText: '超商', imageSrc: '../../FrontstageTemplate/assets/brand/common/seven-logo.png', addresses: [] }
                    ];




                    const generateStoresHtml1 = (data) => {
                        const carriersMap = defaultCarriers.reduce((map, carrier) => {
                            map[carrier.carrierNo] = carrier;
                            return map;
                        }, {});

                        data.forEach(store => {
                            if (carriersMap[store.carrierNo]) {
                                carriersMap[store.carrierNo].addresses = store.addresses;
                            }
                        });

                        return Object.values(carriersMap).map(store => {
                            const hasAddresses = store.addresses.length > 0;
                            const buttonClass = hasAddresses ? 'accordion-button collapsed' : 'accordion-button collapsed disabled';
                            const productsHtml = hasAddresses ? generateProductsHtml(store.addresses) : '';





                            return `
                                                            <div class="accordion-item mb-4 ">
                                                <h2 class="accordion-header" id="heading${store.carrierNo}">
                                                    <button class="${buttonClass}" type="button" data-bs-toggle="collapse" data-bs-target="#collapse${store.carrierNo}" aria-expanded="false" aria-controls="collapse${store.carrierNo}">
                                                        ${store.displayText} <img src="${store.imageSrc}" alt="${store.displayText}" />
                                                    </button>
                                                </h2>
                                                <div id="collapse${store.carrierNo}" class="accordion-collapse collapse ${hasAddresses ? '' : 'disabled'}" aria-labelledby="heading${store.carrierNo}" data-bs-parent="#accordionExample1">
                                                    <div class="accordion-body">

                                                            ${productsHtml}


                                                    </div>
                                                </div>
                                            </div>


                                        `;
                        }).join('');
                    };


                    const divSpots1 = document.getElementById('accordionExample1');
                    divSpots1.innerHTML = generateStoresHtml1(data);


                    const selectElements = document.querySelectorAll('#accordionExample1 .track-info');



                    // 通用的更新模态框内容函数
                    const updateModalContent = (modalId, addressData, updateCallback) => {
                        const nameInput = document.querySelector(`${modalId} .addressName input`);
                        const phoneInput = document.querySelector(`${modalId} .addressPhone input`);
                        const addressInput = document.querySelector(`${modalId} .address input`);
                        const address = document.querySelector('#exampleModalToggle4 .carrier-address div');
                        const checkbox = document.querySelector(`${modalId} .hidden-box`);
                        const priceElement = document.querySelector(`${modalId} .carryway .checktext-money`);

                        const addressStoreName = document.querySelector(`${modalId} .carrier-address .storeName`);
                        const addressStoreId = document.querySelector(`${modalId} .carrier-address .storeId`);

                        if (addressData && addressData.length > 0) {
                            nameInput.value = addressData[0].recordName || '';
                            phoneInput.value = addressData[0].recordPhone || '';

                            if (addressInput) {
                                addressInput.value = addressData[0].adress || '';
                            } else {
                                address.textContent = addressData[0].adress.replace(/\|$/, '').trim() || '';
                            }

                            if (checkbox) {
                                checkbox.checked = (addressData[0].carrierWayNo === 1);
                            }
                            if (priceElement) {
                                priceElement.textContent = `$${addressData[0].price || 0}`;
                            }
                            if (addressStoreName) {
                                addressStoreName.textContent = addressData[0].storeName || '';
                            }
                            if (addressStoreId) {
                                addressStoreId.textContent = addressData[0].storeId || '';
                            }
                        }

                        $(document).on('click', `${modalId} .dark-btn-n`, function () {
                            const submitdata = {
                                CarrierAddressSid: addressData[0].carrierAddressSid,
                                MemberSid: nowId,
                                RecordName: nameInput.value,
                                RecordPhone: phoneInput.value,
                                Adress: addressInput ? addressInput.value : address.textContent,
                                StoreName: addressStoreName ? addressStoreName.textContent : undefined,
                                StoreId: addressStoreId ? addressStoreId.textContent : undefined,
                                CarrierWayNo: checkbox ? (checkbox.checked ? 1 : 2) : undefined
                            };
                            updateCallback(submitdata);
                        });
                    };


                    const deleteModalContent = (modalId, updateCallback) => {

                        const submitdata = {
                            CarrierAddressSid: modalId,
                            MemberSid: nowId,
                            PublicStatusNo: 2
                        };
                        updateCallback(submitdata);
                    };

                    const FirstModalContent = (modalId, wayNo, updateCallback) => {

                        const submitdata = {
                            CarrierAddressSid: modalId,
                            MemberSid: nowId,
                            AddressFirst: 1,
                            CarrierWayNo: wayNo
                        };
                        updateCallback(submitdata);
                    };




                    const updateAddModalContent = (modalId, updateCallback) => {




                        $(document).off('click', `${modalId} #updateAddress`).on('click', `${modalId} #updateAddress`, function () {
                            // 获取当前活跃的 tab-pane
                            const activeTab = document.querySelector(`${modalId} .tab-pane.active`);

                            // 选取并处理需要的元素
                            const nameInput = document.querySelector(`${modalId} .addressName input`);
                            const phoneInput = document.querySelector(`${modalId} .addressPhone input`);
                            const checkbox = document.querySelector(`${modalId} .hidden-box`);

                            let submitdata = {
                                CarrierAddressSid: 0,
                                MemberSid: nowId,
                                RecordName: nameInput ? nameInput.value.trim() : '',
                                RecordPhone: phoneInput ? phoneInput.value.trim() : '',
                                AddressFirst: checkbox ? (checkbox.checked ? 1 : 0) : 0,
                                PublicStatusNo: 1
                            };

                            // 判断是 #home 还是 #profile 选项卡
                            if (activeTab && activeTab.id === 'home') {
                                // 处理新增超商的信息
                                const addressDiv = document.querySelector(`${modalId} .carrier-address div`);
                                const storeNameElement = document.querySelector(`${modalId} .carrier-address .storeName`);
                                const storeIdElement = document.querySelector(`${modalId} .carrier-address .storeId`);

                                submitdata.Adress = addressDiv ? addressDiv.textContent.trim() : '';
                                submitdata.StoreName = storeNameElement ? storeNameElement.textContent.replace(/\s*\|\s*$/, '').trim() : '';
                                submitdata.StoreId = storeIdElement ? storeIdElement.textContent.trim() : '';
                                submitdata.CarrierWayNo = 3;
                            } else if (activeTab && activeTab.id === 'profile') {
                                // 处理新增宅配的信息
                                const addressInput = document.querySelector(`${modalId} #profile input[type="text"]`);
                                const serviceSelect = document.querySelector(`${modalId} #profile select`);

                                submitdata.Adress = addressInput ? addressInput.value.trim() : '';
                                submitdata.CarrierWayNo = serviceSelect ? serviceSelect.value : '';
                            }

                            console.log("submitdata", submitdata);

                            // 调用回调函数以处理数据
                            if (typeof updateCallback === 'function') {
                                updateCallback(submitdata);
                            }
                        });




                    };

                    const element = document.querySelector('.page-title .addAddress');

                    element.addEventListener('click', async () => {
                        const modalTarget = element.getAttribute('href');
                        console.log("modalTarget ", modalTarget)
                        if (modalTarget === "#exampleModalToggle") {

                            updateAddModalContent(modalTarget, updatePrices);
                        }
                    });


                    document.querySelectorAll('.carrier-type p, .carrier-address').forEach(function (element) {
                        element.addEventListener('dblclick', function () {

                            const parentDiv = this.closest('.other-info');
                            if (parentDiv) {
                                const parentId = parentDiv.id;
                                const numberPart = parentId.match(/\d+/);

                                let CarrierAddressSid;
                                let wayNo;

                                if (numberPart) {
                                    console.log('Number Part:', numberPart[0]);
                                    CarrierAddressSid = numberPart[0];
                                }

                                const carrierType = parentDiv.querySelector('.carrier-type span');
                                if (carrierType) {

                                    const className = carrierType.className;
                                    const wayNoNumber = className.match(/\d+/);
                                    if (wayNoNumber) {
                                        console.log('Way No Number:', wayNoNumber[0]);
                                        wayNo = wayNoNumber[0];
                                    }

                                }



                                FirstModalContent(CarrierAddressSid, wayNo, updatePrices);




                            }
                        });
                    });



                    // 更新数据
                    const loadAddressData = async (CarrierAddressSid) => {
                        const api = '@Url.Content("~/Frontstage/StoreCentersAPI/AddressOne")';
                        const apiFilter = `${api}?CarrierAddressSid=${CarrierAddressSid}`;
                        try {
                            const response = await fetch(apiFilter, {
                                method: 'GET',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });

                            if (!response.ok) {
                                throw new Error(`HTTP error! status: ${response.status}`);
                            }

                            const data = await response.json();
                            return data;
                        } catch (error) {
                            console.error('There has been a problem with your fetch operation:', error);
                            throw error;
                        }
                    };




                    selectElements.forEach(element => {
                        element.addEventListener('click', async (event) => {


                            const modalTarget = element.getAttribute('href');
                            const dataEditValue = element.getAttribute('data-edit');
                            const dataDeleteValue = element.getAttribute('data-deletesid');


                            try {
                                if (dataDeleteValue != null) {



                                    await deleteModalContent(dataDeleteValue, updatePrices);
                                }

                                if (dataEditValue != null) {

                                    const addressData = await loadAddressData(dataEditValue);


                                    if (modalTarget === "#exampleModalToggle3" || modalTarget === "#exampleModalToggle4") {
                                        updateModalContent(modalTarget, addressData, updatePrices);
                                    }
                                }

                            } catch (error) {
                                console.error('Error while handling address data:', error);
                            }
                        });
                    });







                } catch (error) {
                    console.error('There has been a problem with your fetch operation:', error);
                }
            };
            loadBuyCarts1(nowId);

            const checkbox = document.querySelector('#exampleModalToggle3 .hidden-box');
            const priceElement = document.querySelector('#exampleModalToggle3 .checktext-money');


            function updatePrice() {
                if (checkbox.checked) {
                    priceElement.textContent = '$160';
                } else {
                    priceElement.textContent = '$120';
                }
            }


            updatePrice();


            checkbox.addEventListener('change', updatePrice);





            //新增更改資料
            const updatePrices = async (submitdata) => {
                const apiUrl = 'https://localhost:7080/Frontstage/StoreCentersAPI/CarrierAddress/Save';

                try {
                    const response = await fetch(apiUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(submitdata)
                    });


                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }


                    const result = await response.json();
                    console.log('Success:', result);

                    $('.modal-n').modal('hide');
                    await loadBuyCarts1(submitdata.MemberSid);

                } catch (error) {

                    console.error("Error occurred:", error.message);
                    console.log("nonono");
                }
            };

            const NowUserSid = '@ViewBag.MemberSid';

            const elementopen = document.querySelector('.page-title .changeOpen');
            let currentOpenData = null;

            elementopen.addEventListener('click', async () => {
                try {
                    const nn = await loadOpenData(NowUserSid);
                    console.log("nn", nn[0].carrierOpenNo);

                    const SwitchHome = document.querySelector('#SwitchHome');
                    const SwitchStore = document.querySelector('#SwitchStore');

                    currentOpenData = nn[0];

                    SwitchHome.checked = nn[0].houseOpen === 1;
                    SwitchStore.checked = nn[0].storeOpen === 1;

                } catch (error) {
                    console.error('Error fetching open data:', error);
                }
            });


            const updateOpen = document.querySelector('#exampleModalToggle5 .updateOpen');

            updateOpen.addEventListener('click', async () => {
                if (currentOpenData) {
                    const SwitchHome = document.querySelector('#SwitchHome');
                    const SwitchStore = document.querySelector('#SwitchStore');

                    const updatedData = {
                        "CarrierOpenNo": currentOpenData.carrierOpenNo,
                        "storeOpen": SwitchStore.checked ? 1 : 0,
                        "houseOpen": SwitchHome.checked ? 1 : 0
                    };

                    try {
                        const response = await fetch('https://localhost:7080/Frontstage/StoreCentersAPI/UpdateCarrierOpen', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(updatedData)
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }

                        const result = await response.json();
                        console.log('Update successful:', result);
                        $('.modal-n').modal('hide');
                        await loadBuyCarts1(currentOpenData.storeSid);
                    } catch (error) {
                        console.error('Error updating carrier open data:', error);
                    }
                } else {
                    console.error('No open data available to update.');
                }
            });



            const loadOpenData = async (memberSid) => {
                const api = '@Url.Content("~/Frontstage/StoreCentersAPI/CarrierOpenOne")';
                const apiFilter = `${api}?memberSid=${memberSid}`;
                try {
                    const response = await fetch(apiFilter, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }

                    const data = await response.json();
                    return data;
                } catch (error) {
                    console.error('There has been a problem with your fetch operation:', error);
                    throw error;
                }
            };

            function updateAddress() {
                const nameInput = document.querySelector(`#exampleModalToggle  .addressName input`);
                const phoneInput = document.querySelector(`#exampleModalToggle  .addressPhone input`);
                nameInput.value = "朱家家";
                phoneInput.value = "0930203040";

                const haveStore = document.querySelector(`#exampleModalToggle  #haveStore`);
                const noStore = document.querySelector(`#exampleModalToggle  #noStore`);

                const haveStore_detail = document.querySelector(`#exampleModalToggle  #haveStore_detail`);

        
                haveStore.classList.remove('d-none'); 
                haveStore_detail.classList.remove('d-none'); 
                noStore.classList.add('d-none'); 
            }

            document.addEventListener('keydown', function (event) {
            
                if (event.code === 'Space') {
                    event.preventDefault(); 
                    updateAddress(); 
                }
            });


        });



    </script>
}