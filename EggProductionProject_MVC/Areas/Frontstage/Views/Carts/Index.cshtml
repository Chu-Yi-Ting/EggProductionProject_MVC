@{
    Layout = "_FrontLayout_common";
}

@section Styles {
    <style>
        .cart-card .cart-card-owner .all-choose {
            color: var(--main-color);
        }

        .hasCarriers {
            display: none
        }

        .noCarriers {
            font-weight: 600
        }

        .store-body-outer .pagebody-store .accordion-item .accordion-body .other-info .default {
            font-size: 10px;
            color: #d8b45c;
            font-weight: 700;
            border: none;
            border-radius: 40px;
            padding: 0px;
        }

        .change_address {
            padding: 0px 5px;
        }



        .accordion-item .accordion-button.disabled {
            pointer-events: none;
            opacity: 0.5;
        }


        .store-body-outer .pagebody-store .accordion-item .accordion-button.disabled::after {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23b8860b'%3e%3ccircle cx='8' cy='8' r='7' stroke='%23b8860b' stroke-width='1' fill='none'/%3e%3cline x1='4' y1='4' x2='12' y2='12' stroke='%23b8860b' stroke-width='1'/%3e%3cline x1='12' y1='4' x2='4' y2='12' stroke='%23b8860b' stroke-width='1'/%3e%3c/svg%3e");
        }

    </style>
}

<div class="title-bg mb-3">
    <img class="w-100"
         src="~/FrontstageTemplate/assets/brand/layout/banners/banner_01.png"
         alt="" />
</div>

<section class="py-3 py-lg-5 text-center container">
    <div class="step-nav">
        <div class="step step-one finished ">
            <div class="radial-progress active" data-index="0">
                <div class="step-text">
                    <p>step1</p>
                    <p>購物車</p>
                </div>
            </div>
            <p class="step-num">1</p>
        </div>
        <div class="step">
            <div class="line">
                <div class="progress"></div>
            </div>
            <div class="radial-progress" data-index="1">

                <div class="step-text">
                    <p>step2</p>
                    <p>資料填寫</p>
                </div>
            </div>
            <p class="step-num">2</p>
        </div>
        <div class="step ">
            <div class="line">
                <div class="progress"></div>
            </div>
            <div class="radial-progress" data-index="2">

                <div class="step-text">
                    <p>step3</p>
                    <p>確認完成</p>
                </div>
            </div>
            <p class="step-num">3</p>
        </div>
    </div>
</section>

<div class="album py-5 container-outer-n">
    <div class="container">

        <div class="row g-lg-5" id="part-1">


            <div class="col-lg-4 order-lg-last">
                <div class="position-sticky" style="top: 2rem;">
                    <div class="p-0 mb-3 side-control">
                        <h4 class="d-flex justify-content-between align-items-center mb-3">
                            <span class="cal-box-title">折扣優惠試算</span>
                            <!-- <span class="badge text-muted">已勾選4件商品</span> -->
                        </h4>
                        <div class="card cal-box">
                            <div class="card-body">
                                <div>
                                    <div class="o_price_total cal-box-list">
                                        <p class="my-0">小計</p>
                                        <span class="">$ 0</span>
                                    </div>
                                    <hr>
                                    <div class="discount_total cal-box-list mb-3 product_discounts">
                                        <p class="my-0">商品折扣</p>
                                        <span class="">- $ 0</span>
                                    </div>
                                    <div class="discount_total cal-box-list percent_discount">
                                        <div class="d-flex justify-content-start align-items-center">
                                            <p class="my-0 me-3">組合優惠</p>
                                            <img src="~/FrontstageTemplate/assets/brand/common/octicon_info-16.svg" alt="" srcset="">
                                        </div>

                                        <span class="">無</span>
                                    </div>
                                    <hr>
                                    <div class="price_total cal-box-list" id="Simulation_calculation">
                                        <h4 class="my-0">總計</h4>
                                        <span class="">NT$ 0</span>
                                    </div>
                                    <p class="hint">*總付款金額請以結帳頁面為主</p>
                                </div>
                            </div>
                        </div>

                        <button type="submit" class="btn submit-btn dark-btn-n w-100">

                            <span class="mx-2">立即購買</span>
                            <i class="fa-solid fa-arrow-right"></i>
                        </button>

                    </div>
                </div>
            </div>
            <div class="col-lg-8">
                <h4 class="cart-list mb-3">購物車清單</h4>
                <div class="row" id="div1">
                </div>

            </div>
        </div>



        <div class="row g-lg-5 d-none" id="part-2">



            <div class="col-lg-12">
                <div class="card-content-dec d-flex w-100 px-3 px-lg-4 ">
                    <div class="w-100 "><p class="mb-2">訂單商品</p></div>
                    <div class="w-100 title d-flex justify-content-between">
                        <p class="ms-lg-5 d-none d-lg-block mb-2">單價</p>
                        <p class="ms-lg-2 d-none d-lg-block mb-2">數量</p>
                        <p class="me-lg-5 d-none d-lg-block mb-2">總價</p>
                    </div>


                </div>
                <div class="row" id="div2">
                </div>

            </div>




            <div class="col-lg-12 my-4 my-lg-0">
                <hr class="mb-3 mb-lg-5">
                <h4 class="d-flex justify-content-between align-items-center mb-4">
                    <span class="cal-box-title">結帳方式</span>
                    <!-- <span class="badge text-muted">已勾選4件商品</span> -->
                </h4>

                <div class="d-flex flex-column flex-sm-row">
                    <button id="payway1" class="btn payway-btn dark-btn-n me-4 my-2 my-sm-0">
                        <h5 class="mb-0">信用卡<br><span class="mx-2">(VISA、Mastercard、JCB)</span></h5>
                    </button>
                    <button id="payway2" class="btn payway-btn light-btn-n my-2 my-sm-0">
                        <h5>貨到付款</h5>
                    </button>
                </div>



            </div>





            <div class="col-lg-12">
                <h4 class="cart-list mb-3">總計明細</h4>
            </div>
            <div class="col-lg-6 mt-0 mt-lg-4 ">
                <div class="card no-border-n bg-gray me-lg-5">
                    <div class="card-body ">
                        <div class=" w-100 d-flex flex-column mx-auto px-lg-3
									 mt-3 mt-lg-0 py-4 ">
                            <div class="form-control-n">
                                <div class="title mb-3 d-flex justify-content-between">
                                    商城代幣折抵<div class="allcoin">
                                        當前擁有代幣<span id="coinAmount">49</span>
                                    </div>
                                </div>

                                @* <input class="form-control form-control-sm" type="text" placeholder="0" aria-label=""> *@
                                <input id="amountInput"
                                       class="form-control form-control-sm"
                                       type="number"
                                       placeholder="0"
                                       aria-label=""
                                       min="0"
                                       max="49"
                                       step="1">
                            </div>

                            <div class="form-control-n mt-4">
                                <div class="title mb-3 d-flex justify-content-between">
                                    優惠券
                                </div>
                                @*   <div id="div3">
                                <select class="select-n " name="state">
                                <option value="31" disabled>慶日券(低消，需滿 NT$1800)</option>
                                <option value="1">生日券</option>
                                <option value="null">無需使用優惠券</option>
                                </select>
                                </div> *@

                                <div id="div3">
                                    <select class="select-n " name="state" id="couponSelect">
                                        <option value="null">無需使用優惠券</option>
                                    </select>

                                </div>



                            </div>

                        </div>
                    </div>
                </div>

            </div>
            <div class="col-lg-6 mt-4">
                <div class="card cal-box no-border-n  p-0">
                    <div class="card-body py-0 px-0 px-lg-5">
                        <div>
                            @*                 <div class="o_price_total cal-box-list">
                            <p class="my-0">商品小計</p>
                            <span class="">$0</span>
                            </div>
                            <div class="product_discounts  o_price_total cal-box-list mb-3 ">
                            <p class="my-0">商品折扣</p>
                            <span class="">- $0</span>
                            </div> *@
                            <div class="product_discounts  o_price_total cal-box-list mb-3  noCombo">
                                <p class="my-0">商品金額</p>
                                <span class="">- $0</span>
                            </div>

                            <hr>
                            <div class="discount_total cal-box-list percent_discount  mb-3">
                                <div class="d-flex justify-content-start align-items-center">
                                    <p class="my-0 me-3">組合優惠</p>
                                </div>

                                <span class="">無</span>
                            </div>
                            <div class="discount_total cal-box-list mb-3 coin_use">
                                <div class="d-flex justify-content-start align-items-center ">
                                    <p class="my-0 me-3">商城代幣折抵</p>
                                </div>

                                <span class="">- $ 0</span>
                            </div>
                            <div class="discount_total cal-box-list mb-3 coupon_use">
                                <div class="d-flex justify-content-start align-items-center">
                                    <p class="my-0 me-3">優惠券折扣</p>
                                </div>

                                <span class="">- $ 0</span>
                            </div>
                            <hr>

                            <div class="o_price_total cal-box-list mb-3 ps-0  no_carriers_price end_orders_price">
                                <p class="my-0">【商品總價】合計</p>
                                <span class=""> $0</span>
                            </div>

                            <div class="o_price_total cal-box-list mb-3 ps-0 carriers_price">
                                <p class="my-0">【訂單運費】合計</p>
                                <span class=""> $0</span>
                            </div>

                            <hr>

                            <div class="price_total cal-box-list  pay_end_total">
                                <h4 class="my-0">總計</h4>
                                <span class="">NT$0</span>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-lg-12 d-flex justify-content-center">
                <button type="submit" class="btn buy-btn dark-btn-n  my-2 my-sm-0" id="updatePricesButton">
                    <h5 class="mb-0">確認下單</h5>
                </button>
            </div>
        </div>
    </div>


</div>

@* <div id="divSpots" class="container">
    <!-- The dynamically generated content will be inserted here -->
</div> *@


<!-- Modal -->
<div class="modal modal-n fade"
     id="exampleModalToggle2"
     aria-hidden="true"
     aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header px-4 mx-4 pb-0 mt-2">
                <h5 class="modal-title mb-2" id="exampleModalToggleLabel">
                    修改物流
                    <span class="ms-3"> </span>
                </h5>

                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body mx-2">
                <div class="col-lg-12">
                    <div class="store-body-outer">
                        <div class="pagebody-store m-0">
                            <div class="accordion" id="accordionExample1">
                                @*                       <div class="accordion-item">
                                <h2 class="accordion-header" id="headingOne">
                                <button class="accordion-button collapsed"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#collapseOne1"
                                aria-expanded="false"
                                aria-controls="collapseOne1">
                                宅配<img src="~/FrontstageTemplate/assets/brand/common/blackcat_logo.svg"
                                alt="" />
                                </button>
                                </h2>
                                <div id="collapseOne1"
                                class="accordion-collapse collapse"
                                aria-labelledby="headingOne"
                                data-bs-parent="#accordionExample1">
                                <div class="accordion-body">
                                <div class="scroll">
                                <div class="form-check d-flex">
                                <input class="form-check-input"
                                type="radio"
                                name="flexRadioDefault"
                                id="flexRadioDefault1" />
                                <label class="form-check-label w-100"
                                for="flexRadioDefault1">
                                <div class="other-info d-flex flex-column flex-lg-row">
                                <div class="w-100 mx-auto">
                                <div class="part form-control-n">
                                <div class="carrier-type w-100 d-flex justify-content-between pb-1">
                                <p class="d-flex align-items-center mb-0">
                                黑貓宅急便<span>冷藏</span><span class="default ms-2 m-0 mt-0 ">
                                預設
                                </span>

                                </p>
                                <div class="d-flex justify-content-center align-items-center">
                                <div class="track-info">60元</div>
                                </div>
                                </div>
                                <div class="carrier-address d-flex flex-column">
                                <div class="d-flex mt-1 mt-md-0">
                                <p class="name me-2 m-0">張家豪</p>
                                <p class="phone me-2 m-0">
                                0960101028
                                </p>
                                </div>
                                <p class="address me-2 m-0">
                                <span class=""></span>台北市中正區忠孝東路一段72號76號1樓台北市中正區忠孝
                                </p>
                                </div>
                                </div>
                                </div>
                                </div>
                                </label>
                                </div>

                                <hr class="m-0" />
                                <div class="form-check d-flex">
                                <input class="form-check-input"
                                type="radio"
                                name="flexRadioDefault"
                                id="flexRadioDefault1" />
                                <label class="form-check-label w-100"
                                for="flexRadioDefault1">
                                <div class="other-info d-flex flex-column flex-lg-row">
                                <div class="w-100 mx-auto">
                                <div class="part form-control-n">
                                <div class="carrier-type w-100 d-flex justify-content-between pb-1">
                                <p class="d-flex align-items-center mb-0">
                                黑貓宅急便<span>冷藏</span><span class ="default ms-2 m-0 mt-0 d-none">
                                預設</span>

                                </p>
                                <div class="d-flex justify-content-center align-items-center">
                                <div class="track-info">60元</div>
                                </div>
                                </div>
                                <div class="carrier-address d-flex flex-column">
                                <div class="d-flex mt-1 mt-md-0">
                                <p class="name me-2 m-0">張家豪</p>
                                <p class="phone me-2 m-0">
                                0960101028
                                </p>
                                </div>
                                <p class="address me-2 m-0">
                                <span class=""></span>台北市中正區忠孝東路一段72號76號1樓台北市中正區忠孝
                                </p>
                                </div>

                                </div>
                                </div>
                                </div>
                                </label>
                                </div>

                                </div>

                                <div class="form-control-n pt-2 p-3">
                                <a class="btn light-btn-n btn-sm-dbrs"
                                data-bs-toggle="modal"
                                href="#exampleModalToggle4"
                                role="button">新增地址</a>
                                </div>
                                </div>
                                </div>
                                </div>
                                <div class="accordion-item my-4">
                                <h2 class="accordion-header" id="headingTwo">
                                <button class="accordion-button collapsed"
                                type="button"
                                data-bs-toggle="collapse"
                                data-bs-target="#collapseTwo1"
                                aria-expanded="false"
                                aria-controls="collapseTwo1">
                                超商
                                <img src="~/FrontstageTemplate/assets/brand/common/seven-logo.png"
                                alt="" />
                                </button>
                                </h2>
                                <div id="collapseTwo1"
                                class="accordion-collapse collapse"
                                aria-labelledby="headingTwo"
                                data-bs-parent="#accordionExample1">
                                <div class="accordion-body">
                                <div class="scroll">
                                <div class="form-check d-flex">
                                <input class="form-check-input"
                                type="radio"
                                name="flexRadioDefault"
                                id="flexRadioDefault1" />
                                <label class="form-check-label w-100"
                                for="flexRadioDefault1">
                                <div class="other-info d-flex flex-column flex-lg-row">
                                <div class="w-100 mx-auto">
                                <div class="part form-control-n">
                                <div class="carrier-type w-100 d-flex justify-content-between pb-1">
                                <p class="d-flex align-items-center mb-0">
                                黑貓宅急便<span>冷藏</span><span class="default ms-2 m-0 mt-0 ">
                                預設
                                </span>

                                </p>
                                <div class="d-flex justify-content-center align-items-center">
                                <div class="track-info">60元</div>
                                </div>
                                </div>
                                <div class="carrier-address d-flex flex-column">
                                <div class="d-flex mt-1 mt-md-0">
                                <p class="name me-2 m-0">張家豪</p>
                                <p class="phone me-2 m-0">
                                0960101028
                                </p>
                                </div>
                                <p class="address me-2 m-0">
                                <span class="me-1">忠孝東門市 | </span>台北市中正區忠孝東路一段72號76號1樓
                                </p>
                                </div>
                                </div>
                                </div>
                                </div>
                                </label>
                                </div>

                                </div>

                                <div class="form-control-n pt-2 p-3">
                                <a class="btn light-btn-n btn-sm-dbrs"
                                data-bs-toggle="modal"
                                href="#exampleModalToggle3"
                                role="button">新增地址</a>
                                </div>
                                </div>
                                </div>
                                </div> *@
                            </div>
                            <div class="w-100 submit mt-4 mb-3">
                                <button class="btn dark-btn-n " id="showOrderCarrier" type="button">
                                    確定送出
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal modal-n fade"
     id="exampleModalToggle3"
     aria-hidden="true"
     aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header px-4 mx-4 pb-0 mt-2">
                <h5 class="modal-title mb-2" id="exampleModalToggleLabel">
                    新增宅配
                    <span class="ms-3"> </span>
                </h5>

                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body mx-2">
                <div class="col-lg-12">
                    <div class="form-control-n">
                        <div class="title mb-2 d-flex justify-content-between">
                            <div class="allcoin">收貨人姓名<span></span></div>
                        </div>
                        <input class="form-control form-control-sm"
                               type="text"
                               placeholder=""
                               aria-label="" />
                    </div>
                    <div class="form-control-n mt-3">
                        <div class="title mb-2 d-flex justify-content-between">
                            <div class="allcoin">聯繫方式<span></span></div>
                        </div>
                        <input class="form-control form-control-sm"
                               type="text"
                               placeholder=""
                               aria-label="" />
                    </div>

                    <div class="form-control-n mt-3">
                        <div class="title mb-2 d-flex justify-content-between">
                            <div class="allcoin">取貨地址<span></span></div>
                        </div>
                        <input class="form-control form-control-sm"
                               type="text"
                               placeholder=""
                               aria-label="" />
                    </div>

                    <div class="cart-card bg-none mt-4">
                        <div class="cart-card-item p-0">
                            <input type="checkbox"
                                   class="hidden-box"
                                   id="s1_p202409010003"
                                   checked="" />
                            <label for="s1_p202409010003"
                                   class="check--label w-100">
                                <span class="check--label-box ms-0 me-2"></span>
                                <div>
                                    <span class="checktext">
                                        採用低溫配送服務
                                        <img src="~/FrontstageTemplate/assets/brand/common/octicon_info-16.svg"
                                             alt=""
                                             srcset="" />
                                    </span>
                                    <span class="checktext text-gray">僅宅配提供</span>
                                </div>
                                <p class="m-0 ms-auto checktext-money">$160</p>
                            </label>
                        </div>
                    </div>

                    <div class="w-100 submit mt-4 mb-3">
                        <button class="btn dark-btn-n" type="button">
                            確定送出
                        </button>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal modal-n fade"
     id="exampleModalToggle4"
     aria-hidden="true"
     aria-labelledby="exampleModalToggleLabel"
     tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header px-4 mx-4 pb-0 mt-2">
                <h5 class="modal-title mb-2" id="exampleModalToggleLabel">
                    新增超商
                    <span class="ms-3"> </span>
                </h5>

                <button type="button"
                        class="btn-close"
                        data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body mx-2">
                <div class="col-lg-12">
                    <div class="store-body-outer">
                        <div class="pagebody-store m-0">
                            <div class="form-control-n">
                                <div class="title mb-2 d-flex justify-content-between">
                                    <div class="allcoin">收貨人姓名<span></span></div>
                                </div>
                                <input class="form-control form-control-sm"
                                       type="text"
                                       placeholder=""
                                       aria-label="" />
                            </div>
                            <div class="form-control-n mt-3">
                                <div class="title mb-2 d-flex justify-content-between">
                                    <div class="allcoin">聯繫方式<span></span></div>
                                </div>
                                <input class="form-control form-control-sm"
                                       type="text"
                                       placeholder=""
                                       aria-label="" />
                            </div>

                            <div class="form-control-n mt-3">
                                <div class="title mb-2 d-flex justify-content-between">
                                    <div class="allcoin">門市選擇<span></span></div>
                                </div>
                                <button class="btn light-btn-n" type="button">
                                    新增 / 調整地址
                                </button>
                            </div>
                            <div class="accordion-item mt-4">
                                <div class="accordion-body">
                                    <div class="other-info d-flex flex-column flex-lg-row py-3">
                                        <div class="w-100 mx-auto">
                                            <div class="part form-control-n">
                                                <div class="carrier-type w-100 d-flex justify-content-between pb-2">
                                                    <p class="d-flex align-items-center mb-0">
                                                        7-ELEVEN<span>超商</span>
                                                    </p>
                                                </div>
                                                <div class="carrier-address d-flex flex-column flex-xl-row">
                                                    <p class="address me-2 m-0">
                                                        <span class="me-1">忠孝東門市 | </span>
                                                        <span class="me-1 mb-2">225436</span><br />
                                                        台北市中正區忠孝東路一段72號76號1樓
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="cart-card bg-none mt-4">
                                <div class="cart-card-item p-0">
                                    <label class="check--label w-100">
                                        <span class="checktext">
                                            常溫配送價格
                                            <img src="~/FrontstageTemplate/assets/brand/common/octicon_info-16.svg"
                                                 alt=""
                                                 srcset="" />
                                        </span>
                                        <p class="m-0 ms-auto checktext-money">$60</p>
                                    </label>
                                </div>
                            </div>

                            <div class="w-100 submit mt-4 mb-3">
                                <button class="btn dark-btn-n" type="button">
                                    確定送出
                                </button>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
</div>







@section Scripts {



    <script>


        $(document).ready(function () {



            const searchData = {
                "Msid": 1
            }



            const loadSpots = async (cartSid_check) => {
                const api = '@Url.Content("~/Frontstage/CartsAPI/CartsList")';
                const response = await fetch(api, {
                    method: 'POST',
                    body: JSON.stringify(searchData),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const data = await response.json();
                console.log(data);

                const generateProductsHtml = (products, cartSidCheck) => {
                    return products.map(product => {
                        const isChecked = cartSidCheck.includes(product.cartSid) ? 'checked' : '';
                        return `
                        <div class="cart-card-item w-100">
                            <input type="checkbox" class="hidden-box" id="s${product.cartSid}_p${product.productSid}" ${isChecked} />
                            <label for="s${product.cartSid}_p${product.productSid}" class="check--label">
                                <span class="check--label-box"></span>
                            </label>
                            <div class="card-body-img d-flex w-100">
                                <div class="img_box">
                                    <img src="${ '../../FrontstageTemplate/assets/brand/page/cart/profuct_1.png'}" />
                                </div>
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div class="d-flex flex-column justify-content-between align-items-start me-3">
                                            <h5>${product.productName}</h5>
                                                            <small class="describe no_${product.subcategoryNo}">${product.subcategoryName}</small>
                                        </div>
                                        <button class="btn delete_btn" type="button">
                                            <i class="fa-solid fa-xmark"></i>
                                        </button>
                                    </div>
                                    <div class="bottom_item flex-md-row align-items-md-center">
                                        <div class="d-flex flex-column justify-content-between align-items-start me-3">


                                                            <big class="price">NT$ ${Math.round(product.price * (product.discountPercent || 1))}</big>
                                            <small class="o_price">NT$ ${product.price.toFixed(2)}</small>
                                        </div>
                                        <div class="input-group num_box_n">
                                            <button class="btn decrease-qty" type="button">
                                                <i class="fa-solid fa-minus"></i>
                                            </button>
                                            <input type="text" class="form-control qty stock_${product.stock}" placeholder="" value="${product.qty}" aria-label="Example text with two button addons" />
                                            <button class="btn increase-qty" type="button">
                                                <i class="fa-solid fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                    }).join(' <hr />');
                };

                const generateStoresHtml = (data) => {
                    return data.map(store => `
                    <div class="col col-sm-12 my-4">
                        <div class="card shadow-sm cart-card pb-3">
                                            <div class="cart-card-owner ">
                                <div class="ck-farm d-flex align-items-center">
                                    <div class="img-outer">
                                        <img src="${'../../FrontstageTemplate/assets/brand/layout/mug.png'}" alt="" />
                                    </div>
                                    <p class="ck-farm-name p-0 m-0">${store.company}</p>
                                </div>
                                <button class="btn p-0 me-md-3 all_cart" type="button">
                                    <p class="all-tool p-0 m-0 ">全選</p>
                                </button>
                            </div>
                            <hr />
                            ${generateProductsHtml(store.products, cartSid_check)}
                        </div>
                    </div>
                `).join('');
                };

                const divSpots = document.getElementById('div1');
                divSpots.innerHTML = generateStoresHtml(data);
            };


            const BuyData = {
                "Msid": 1,
                "CartSids": []
            }






             loadSpots(BuyData.CartSids);



            // const data = [
            //     {
            //         "storeSid": 1,
            //         "company": "大帥哥牧場",
            //         "storeImg": null,
            //         "products": [
            //             {
            //                 "cartSid": 1,
            //                 "memberSid": 1,
            //                 "productSid": 5,
            //                 "qty": 2,
            //                 "productNo": "E202406070001",
            //                 "productName": "雞籠",
            //                 "img":null,
            //                 "price": 100.0000,
            //                 "stock": 50,
            //                 "discountPercent": null,
                                // "subcategoryNo": 2,
            //                 "subcategoryName": "籠飼蛋"
            //             },
            //             {
            //                 "cartSid": 2,
            //                 "memberSid": 1,
            //                 "productSid": 6,
            //                 "qty": 1,
            //                 "productNo": "P202406070002",
            //                 "productName": "超神奇蛋捲",
            //                 "img": null,
            //                 "price": 60.0000,
            //                 "stock": 20,
            //                 "discountPercent": 0.65,
                                // "subcategoryNo": 3,
            //                 "subcategoryName": "加工蛋品"
            //             }
            //         ]
            //     },
            //     {
            //         "storeSid": 11,
            //         "company": "傑克畜牧場",
            //         "storeImg": null,
            //         "products": [
            //             {
            //                 "cartSid": 4,
            //                 "memberSid": 1,
            //                 "productSid": 11,
            //                 "qty": 2,
            //                 "productNo": "P202406080002",
            //                 "productName": "先生蛋塔",
            //                 "img": null,
            //                 "price": 300.0000,
            //                 "stock": 100,
            //                 "discountPercent": 0.60,
                                // "subcategoryNo": 3,
            //                 "subcategoryName": "加工蛋品"
            //             }
            //         ]
            //     },
            //     {
            //         "storeSid": 13,
            //         "company": "贊克畜牧場",
            //         "storeImg": null,
            //         "products": [
            //             {
            //                 "cartSid": 5,
            //                 "memberSid": 1,
            //                 "productSid": 13,
            //                 "qty": 1,
            //                 "productNo": "E202406080004",
            //                 "productName": "富基靈芝機能雞蛋",
            //                 "img": null,
            //                 "price": 160.0000,
            //                 "stock": 200,
            //                 "discountPercent": 0.70,
                                    // "subcategoryNo": 1,
            //                 "subcategoryName": "放牧蛋"
            //             }
            //         ]
            //     }
            // ]

            function sendAjaxRequest(url, method, data, successCallback, errorCallback) {
                $.ajax({
                    url: url,
                    type: method,
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: successCallback,
                    error: errorCallback
                });
            }



            let totalOriginalPrice = 0;
            let totalDiscountedPrice = 0;



            const updateSelectAllButton = (card) => {
                const checkboxes = card.querySelectorAll('.hidden-box');
                const selectAllButton = card.querySelector('.all_cart p');

                const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);

                if (allChecked) {
                    selectAllButton.classList.add('all-choose');
                } else {
                    selectAllButton.classList.remove('all-choose');
                }
            };


            const checkAllSelectButtons = () => {
                const cards = document.querySelectorAll('.cart-card');
                cards.forEach(card => updateSelectAllButton(card));
            };




            const updateTotals = () => {
                totalOriginalPrice = 0;
                totalDiscountedPrice = 0;
                BuyData.CartSids = [];
                const no = [];

                $('.cart-card-item').each(function () {
                    const $productCard = $(this);
                    const $checkbox = $productCard.find('.hidden-box');
                    const isChecked = $checkbox.is(':checked');

                    if (isChecked) {
                        const $priceElement = $productCard.find('.price');
                        const $oPriceElement = $productCard.find('.o_price');
                        const $input = $productCard.find('.num_box_n > input');

                        if ($input.length) {
                            const stock = parseFloat($input.val()) || 0;
                            const originalPrice = parseFloat($oPriceElement.text().replace('NT$ ', '')) * stock;
                            const discountedPrice = parseFloat($priceElement.text().replace('NT$ ', '')) * stock;

                            totalOriginalPrice += originalPrice;
                            totalDiscountedPrice += discountedPrice;

                            const checkboxId = $checkbox.attr('id');
                            const idPattern = /^s(\d+)_p(\d+)$/;
                            const match = idPattern.exec(checkboxId);

                            if (match) {
                                const idValue = parseInt(match[1], 10);
                                if (!BuyData.CartSids.includes(idValue)) {
                                    BuyData.CartSids.push(idValue);
                                }
                            }


                            const subcategoryNoMatch = $productCard.find('.describe').attr('class').match(/no_(\d+)/);
                            if (subcategoryNoMatch) {
                                no.push(subcategoryNoMatch[1]);
                            }
                        }
                    }
                });

                console.log(`Total original price of selected items: NT$ ${totalOriginalPrice.toFixed(2)}`);
                console.log(`Total discounted price of selected items: NT$ ${totalDiscountedPrice.toFixed(2)}`);
                console.log("cartSid", BuyData.CartSids);
                console.log("Selected subcategory numbers:", no);

                const uniqueNo = [...new Set(no)];
                const hasThree = uniqueNo.includes('3');
                const hasOtherNumbers = uniqueNo.length > 1;



                const calBoxes = document.querySelectorAll('.cal-box');

                calBoxes.forEach(calBox => {

                        const subTotalElement = document.querySelector('#part-1 .o_price_total span');
                        const percent_discount = calBox.querySelector('.percent_discount span');
                        const totalElement = calBox.querySelector('.price_total span');
                        const totalElement1= document.querySelector('#part-2 .noCombo span');
                    const totalElement2 = document.querySelector('#part-2 .no_carriers_price span');


                        const Discount = document.querySelector('#part-1 .product_discounts span');
                        const totalDiscount = totalOriginalPrice - totalDiscountedPrice;
                        totalElement1.textContent = `$${totalDiscountedPrice}`

                        if (subTotalElement && totalElement) {
                            subTotalElement.textContent = `$${totalOriginalPrice.toFixed(0)}`;
                            Discount.textContent = `- $${totalDiscount}`

                            if (hasThree && hasOtherNumbers) {
                                percent_discount.textContent = '9折';
                                const discountedTotalPrice = totalDiscountedPrice * 0.9;
                                totalElement.textContent = `NT$${discountedTotalPrice.toFixed(0)}`;
                            totalElement2.textContent = `NT$${discountedTotalPrice.toFixed(0)}`;
                            BuyData2.totalMoney = discountedTotalPrice;

                            }else{
                                percent_discount.textContent = '無';
                                totalElement.textContent = `NT$${totalDiscountedPrice.toFixed(0)}`;
                            totalElement2.textContent = `NT$${totalDiscountedPrice.toFixed(0)}`;

                            BuyData2.totalMoney = totalDiscountedPrice;

                            }


                        }
                });



            };


            const handleCheckboxChange = (event) => {
                if (event.target.classList.contains('hidden-box')) {
                    updateTotals();

                    const card = event.target.closest('.cart-card');
                    if (card) {
                        updateSelectAllButton(card);
                    }
                }
            };


            $(document).on('click', '.all_cart', function () {
                const card = $(this).closest('.cart-card')[0];
                const checkboxes = card.querySelectorAll('.hidden-box');
                const selectAllButton = $(this).find('p');

                if (selectAllButton.hasClass('all-choose')) {

                    checkboxes.forEach(checkbox => checkbox.checked = false);
                    selectAllButton.removeClass('all-choose');
                } else {

                    checkboxes.forEach(checkbox => checkbox.checked = true);
                    selectAllButton.addClass('all-choose');
                }


                updateTotals();
            });


            document.addEventListener('DOMContentLoaded', () => {
                checkAllSelectButtons();
                updateTotals();
            });


            document.addEventListener('change', handleCheckboxChange);




            $(document).on('click', '.increase-qty, .decrease-qty', function () {
                const $button = $(this);
                const $input = $button.siblings('.qty');


                const classValue = $button.siblings('[class*="stock_"]').attr('class');
                const stockclass = classValue.match(/stock_(\d+)/);
                let stock = 1;

                if (stockclass) {
                    stock = parseInt(stockclass[1], 10);
                }

                let currentQty = parseInt($input.val(), 10);
                const isIncrease = $button.hasClass('increase-qty');
                const isDecrease = $button.hasClass('decrease-qty');


                if (isIncrease) {
                    if (currentQty < stock) {
                        currentQty++;

                    } else {
                        alert("庫存已達上限");
                        return;
                    }
                } else if (isDecrease) {
                    if (currentQty > 1) {
                        currentQty--;

                    } else {
                        alert("至少1筆");
                        return;
                    }
                }

                $input.val(currentQty);

                updateTotals();


                const $cartCardItem = $button.closest('.cart-card-item');
                const inputId = $cartCardItem.find('input').attr('id');
                console.log("Input ID:", inputId);

                const idPattern = /^s(\d+)_p(\d+)$/;
                const match = idPattern.exec(inputId);

                if (match) {
                    const cartSid = match[1];
                    const productSid = match[2];


                    sendAjaxRequest(
                        '@Url.Content("~/Frontstage/CartsAPI/UpdateCartQuantity")',
                        'POST',
                        { CartSid: cartSid, Qty: currentQty },
                        function (response) {

                        },
                        function (error) {
                            console.error('Error updating quantity:', error);
                        }
                    );
                } else {
                    console.error('Invalid input ID format');
                }
            });


            $(document).on('click', '.delete_btn', function () {
                const $cartCardItem = $(this).closest('.cart-card-item');
                const inputId = $cartCardItem.find('input').attr('id');
                const idPattern = /^s(\d+)_p(\d+)$/;
                const match = idPattern.exec(inputId);

                if (match) {
                    const cartSid = parseInt(match[1], 10);
                    const productSid = parseInt(match[2], 10);


                    const currentQty = 0;


                    const $checkbox = $cartCardItem.find('.hidden-box');
                    if ($checkbox.is(':checked')) {
                        $checkbox.prop('checked', false);
                    }


                    sendAjaxRequest(
                        '@Url.Content("~/Frontstage/CartsAPI/UpdateCartQuantity")',
                        'POST',
                        { CartSid: cartSid, Qty: currentQty },
                        function (response) {
                            console.log('Quantity updated successfully', response);


                            updateTotals();
                            loadSpots(BuyData.CartSids);
                        },
                        function (error) {
                            console.error('Error updating quantity:', error);
                        }
                    );
                } else {
                    console.error('Input ID format is incorrect:', inputId);
                }
            });


          //----------------------------------------------------------------

            let submitdata = {
                // memberSid: 1,
                stores: [],
                combo: 0.9,
                usecoin: 0,
                paymentNo: 1,
                couponSid: null,
            };

            const loadBuyCarts = async () => {
                const api = '@Url.Content("~/Frontstage/CartsAPI/CartsList")';
                const response = await fetch(api, {
                    method: 'POST',
                    body: JSON.stringify(BuyData),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const data = await response.json();


                const generateProductsHtml1 = (products) => {
                    return products.map(product => `
                <div class="cart-card-item w-100">
                    <div class="card-body-img d-flex w-100 px-3">
                        <div class="d-flex flex-column">
                            <div class="img_box">
                                <img src="${ '../../FrontstageTemplate/assets/brand/page/cart/profuct_1.png'}" />
                            </div>
                        </div>

                        <div class="card-body flex-row align-items-center">
                            <div class="w-100 d-flex flex-column flex-lg-row justify-content-between align-items-start">
                                <div class="w-50 d-flex flex-column justify-content-between align-items-start">
                                    <h5>${product.productName}</h5>
                                    <small class="describe">${product.subcategoryName}</small>
                                </div>
                                <div class="w-100 bottom_item flex-md-row align-items-md-center me-3">
                                    <div class="w-100 d-flex flex-column justify-content-between align-items-start align-items-lg-end ">

                                                                <big class="price">NT$ ${Math.round(product.price * (product.discountPercent || 1))}</big>
                                    </div>
                                    <div class="w-100 d-flex flex-column justify-content-center align-items-end ">
                                                <big class="price">X ${product.qty}</big>
                                    </div>
                                    <div class="w-100 flex-column justify-content-center align-items-end align-items-lg-end d-none d-lg-flex">

                                                                  <big class="price">NT$ ${product.qty * Math.round(product.price * (product.discountPercent || 1))}</big>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `).join(' <hr />');
                };


                const generateStoresHtml1 = (data) => {
                    return data.map(store => `
                                            <div class="col col-sm-12 mb-5 ">
                                <div class="card shadow-sm cart-card">
                                            <div class="cart-card-owner s_${store.storeSid}">
                                        <div class="ck-farm d-flex align-items-center">
                                            <div class="img-outer">
                                                <img src="../../FrontstageTemplate/assets/brand/layout/mug.png" alt="">
                                            </div>
                                                    <p class="ck-farm-name p-0 m-0">${store.company}</p>
                                        </div>
                                    </div>
                                    <hr>
                                          ${generateProductsHtml1(store.products)}
                                    <hr class="hr-dotted">
                                    <div class="other-info d-flex flex-column flex-lg-row mx-3 mx-lg-2  my-3 mb-5">
                                        <div class=" w-100 mx-auto mx-lg-4">
                                            <div class="part  form-control-n">
                                                <div class=" w-100 d-flex justify-content-between">
                                                    <div class="title ">
                                                        <div class="title-line"></div>寄送資訊
                                                    </div>
                                                    <div class="d-flex justify-content-center align-items-center me-3">
                                                        <div class="track-info d-none">
                                                            60元
                                                        </div>
                                                                   <a class="btn light-btn-n btn-sm-dbrs change_address ms-2" id="store_${store.storeSid}" data-bs-toggle="modal" href="#exampleModalToggle2" role="button">調整</a>
                                                    </div>

                                                </div>
                                                <div class="carrier-type ">
                                                            <p class=" align-items-center mb-2  hasCarriers">7-ELEVEN<span>超商</span></p>
                                                             <p class="d-flex align-items-center my-2 noCarriers" >請新增取貨人物流資訊</p>
                                                </div>
                                                <div class="carrier-address d-flex flex-column flex-xl-row d-none">
                                                    <div class="d-flex mt-1 mt-md-0">
                                                        <p class="name me-2 m-0">張家豪</p>
                                                        <p class="phone me-2 m-0">0960101028</p>
                                                    </div>
                                                    <p class="address me-2 m-0"><span class="me-1">忠孝東門市 | </span>台北市中正區忠孝東路一段72號76號1樓台北市中正區忠孝東路一段72號76號1樓</p>
                                                </div>
                                            </div>


                                        </div>

                                        <div class=" w-100 d-flex flex-column mx-auto mx-lg-4 mt-3 mt-lg-0">
                                            <div class="part  form-control-n">
                                                <div class="title mb-3">
                                                    <div class="title-line"></div>電子發票
                                                </div>
                                                <select class="select-n js-example-basic-single" name="state">
                                                            <option value="AL">二聯式發票(個人)</option>
                                                            <option value="AL">其他</option>
                                                </select>

                                            </div>

                                        </div>


                                    </div>

                                </div>
                            </div>
                        `).join('');
                };

                const divSpots1 = document.getElementById('div2');
                console.log("divSpots1", divSpots1)
                divSpots1.innerHTML = generateStoresHtml1(data);

                submitdata.stores = [];

                data.forEach(store => {
                    submitdata.memberSid = store.products[0].memberSid; // Assuming all products have the same memberSid

                    submitdata.stores.push({
                        storeSid: store.storeSid,
                        addressSid: null,
                        cart: store.products.map(product => product.cartSid)
                    });
                });

                console.log("Updated submitdata:", submitdata);

                document.getElementById('part-1').classList.add('d-none');


                document.getElementById('part-2').classList.remove('d-none');


                const stepElement = Array.from(document.querySelectorAll('.step')).find(step => {
                    const stepNumElement = step.querySelector('.step-num');
                    return stepNumElement && stepNumElement.textContent.trim() === '2';
                });

                if (stepElement) {
                    stepElement.classList.add('finished');
                }

            };





            $(document).on('click', '.submit-btn', async function () {
                if (BuyData.CartSids.length > 0) {
                    try {
                        await loadBuyCarts();



                        $('#div3').empty();


                        const generateStoresHtml = () => {
                            return `
                                                  <select class="select-n " name="state" id="couponSelect">
                                                                <option value="null">無需使用優惠券</option>
                                                            </select>
                                        `;
                        };

                        const divSpots = document.getElementById('div3');
                        divSpots.innerHTML = generateStoresHtml();
                        await loadCoupons(BuyData2.totalMoney);



                         await loadCoinTotal();


                    } catch (error) {
                        console.error("An error occurred while loading buy carts or initializing Choices:", error);
                    }
                } else {
                    alert("需至少選一筆進行結帳");
                }
            });




            let nowStore =''

            $(document).on('click', '.change_address', async function () {
                try {

                    const $cartCardItem = $(this).attr('id');
                    const storeId = $cartCardItem.split('_')[1];
                    await loadBuyCarts1(storeId);

                    nowStore = storeId;


                } catch (error) {
                    console.error("An error occurred while loading buy carts or initializing Choices:", error);
                }

            });


            const loadBuyCarts1 = async (storeId) => {
                const api = '@Url.Content("~/Frontstage/CartsAPI/AddressList")';
                const BuyData1 = {
                    "Msid": 1,
                    "storeSid": storeId
                };

                try {
                    const response = await fetch(api, {
                        method: 'POST',
                        body: JSON.stringify(BuyData1),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });



                    const data = await response.json();


                    const generateProductsHtml = (addresses) => {
                        return addresses.map(address => {
                            const storeNameClass = address.storeName ? '' : 'd-none';
                            const defaultClass = address.addressFirst === 1 ? '' : 'd-none';
                            const storeSid = BuyData1.storeSid;
                            return `
                                    <div class="form-check d-flex s_${storeSid}">
                                <input class="form-check-input " type="radio" name="flexRadioDefault" id="flexRadioDefault${address.carrierAddressSid}">
                                <label class="form-check-label w-100" for="flexRadioDefault${address.carrierAddressSid}">
                                    <div class="other-info d-flex flex-column flex-lg-row">
                                        <div class="w-100 mx-auto">
                                            <div class="part form-control-n">
                                                <div class="carrier-type w-100 d-flex justify-content-between pb-1">
                                                    <p class="d-flex align-items-center mb-0">
                                                        ${address.carrierName}<span>${address.way}</span><span class="default ms-2 m-0 mt-0 ${defaultClass}">預設</span>
                                                    </p>
                                                    <div class="d-flex justify-content-center align-items-center">
                                                        <div class="track-info">${address.price}元</div>
                                                    </div>
                                                </div>
                                                <div class="carrier-address d-flex flex-column">
                                                    <div class="d-flex mt-1 mt-md-0">
                                                        <p class="name me-2 m-0">${address.recordName}</p>
                                                        <p class="phone me-2 m-0">${address.recordPhone}</p>
                                                    </div>
                                                                  <p class="address me-2 m-0">
                                                                    <span class="me-1 ${storeNameClass}">${address.storeName}  | </span>${address.adress}
                                                                </p>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </label>
                            </div>
                        `;
                        }).join('<hr class="m-0" />');
                    };

                    const defaultCarriers = [
                        { carrierNo: 1, displayText: '宅配', imageSrc: '../../FrontstageTemplate/assets/brand/common/blackcat_logo.svg', addresses: [] },
                        { carrierNo: 2, displayText: '超商', imageSrc: '../../FrontstageTemplate/assets/brand/common/seven-logo.png', addresses: [] }
                    ];




                    const generateStoresHtml1 = (data) => {
                        const carriersMap = defaultCarriers.reduce((map, carrier) => {
                            map[carrier.carrierNo] = carrier;
                            return map;
                        }, {});

                        data.forEach(store => {
                            if (carriersMap[store.carrierNo]) {
                                carriersMap[store.carrierNo].addresses = store.addresses;
                            }
                        });

                        return Object.values(carriersMap).map(store => {
                            const hasAddresses = store.addresses.length > 0;
                            const buttonClass = hasAddresses ? 'accordion-button collapsed' : 'accordion-button collapsed disabled';
                            const productsHtml = hasAddresses ? generateProductsHtml(store.addresses) : '';





                            return `
                                    <div class="accordion-item mb-4 ">
                        <h2 class="accordion-header" id="heading${store.carrierNo}">
                            <button class="${buttonClass}" type="button" data-bs-toggle="collapse" data-bs-target="#collapse${store.carrierNo}" aria-expanded="false" aria-controls="collapse${store.carrierNo}">
                                ${store.displayText} <img src="${store.imageSrc}" alt="${store.displayText}" />
                            </button>
                        </h2>
                        <div id="collapse${store.carrierNo}" class="accordion-collapse collapse ${hasAddresses ? '' : 'disabled'}" aria-labelledby="heading${store.carrierNo}" data-bs-parent="#accordionExample1">
                            <div class="accordion-body">
                                <div class="scroll">
                                    ${productsHtml}
                                </div>
                                ${hasAddresses ? '<div class="form-control-n py-2 p-3"><a class="btn light-btn-n btn-sm-dbrs" data-bs-toggle="modal" href="#exampleModalToggle4" role="button">新增地址</a></div>' : ''}
                            </div>
                        </div>
                    </div>
                `;
                        }).join('');
                    };


                    const divSpots1 = document.getElementById('accordionExample1');
                    divSpots1.innerHTML = generateStoresHtml1(data);



                } catch (error) {
                    console.error('There has been a problem with your fetch operation:', error);
                }
            };




            const carriersdatarecord = [

            ];

            $('#showOrderCarrier').on('click', function () {

                const selectedRadio = $('input[type="radio"][name="flexRadioDefault"]:checked');

                if (selectedRadio.length === 0) {
                    alert('請選擇一個運送方式');
                    return;
                }

                const radioId = selectedRadio.attr('id');
                const extractedNumber = radioId.replace('flexRadioDefault', '');

                console.log('Extracted Number:', extractedNumber);


                const selectedDiv = selectedRadio.closest('.form-check');


                const classList = selectedDiv.attr('class');
                const match = classList.match(/s_(\d+)/);
                const number = match ? match[1] : null;


                if (!number) {
                    console.error('未找到 storeSid');

                }
                // console.log('Extracted Number:', extractedNumber);
                // number
                let numericNumber = parseInt(number, 10);
                submitdata.stores.forEach(store => {
                    if (store.storeSid === numericNumber) { // 使用非嚴格比較
                        store.addressSid = extractedNumber;
                    }
                });

                console.log(submitdata);

                const carrierName = selectedDiv.find('.carrier-type p').contents().first().text().trim();
                const carrierWay = selectedDiv.find('.carrier-type span').first().text().trim();
                const price = selectedDiv.find('.track-info').text().trim();
                const recordName = selectedDiv.find('.carrier-address .name').text().trim();
                const recordPhone = selectedDiv.find('.carrier-address .phone').text().trim();
                const address = selectedDiv.find('.carrier-address .address').text().trim();

                const existingRecord = carriersdatarecord.find(record => record.storeSid == number);

                if (existingRecord) {
                    existingRecord.price = price;
                    console.log("Updated carriersdatarecord", carriersdatarecord);

                } else {
                    carriersdatarecord.push({ storeSid: number, price: price });
                    console.log("Added to carriersdatarecord", carriersdatarecord);

                }

                const totalCarriersPrice = carriersdatarecord.reduce((accumulator, currentRecord) => {

                    const price = parseFloat(currentRecord.price.replace(/[^0-9.-]+/g, ''));
                    return accumulator + (isNaN(price) ? 0 : price);
                }, 0);



                const carriersPriceSpan = document.querySelector('.carriers_price span');


                carriersPriceSpan.textContent = ` $ ${totalCarriersPrice}`;

                const oldendPriceSpan = document.querySelector('.end_orders_price span');

                 const textContent = oldendPriceSpan.textContent;
                const initialPrice = parseFloat(textContent.replace(/[^0-9.]/g, '')) || 0;
                console.log("oldendPriceSpan", initialPrice)
                console.log("totalCarriersPrice", totalCarriersPrice)
                let mmm = totalCarriersPrice + initialPrice;
                console.log("mmm", mmm)


                 const PayendSpan = document.querySelector('.pay_end_total span');


                PayendSpan.textContent = ` NT$ ${mmm}`;


                const [type, actualAddress] = address.split('|').map(part => part.trim());

                const formattedAddress = (type === 'null') ? actualAddress : `${type} | ${actualAddress}`;

                const selector = `.cart-card-owner.s_${nowStore}`;

                $(selector).each(function () {

                    const $cartCard = $(this).closest('.cart-card');

                    $cartCard.find('.other-info .part').each(function () {
                        const $this = $(this);

                        $this.find('.carrier-type p').html(`${carrierName}<span>${carrierWay}</span>`);
                        $this.find('.track-info').text(price).removeClass('d-none');
                        $this.find('.carrier-address').removeClass('d-none').find('.name').text(recordName);
                        $this.find('.carrier-address').find('.phone').text(recordPhone);
                        $this.find('.carrier-address').find('.address').html(`<span class="me-1">${formattedAddress}</span>`);
                    });
                });


                $('#exampleModalToggle2').modal('hide');
            });




            let payway = 1;

            function updatePaywaySelection(selectedButtonId) {
                $('.payway-btn').each(function () {
                    if (this.id === selectedButtonId) {
                        $(this).removeClass('light-btn-n').addClass('dark-btn-n');
                    } else {
                        $(this).removeClass('dark-btn-n').addClass('light-btn-n');
                    }
                });
            }

            $('.payway-btn').on('click', function () {
                const selectedButtonId = this.id;
                updatePaywaySelection(selectedButtonId);


                if (selectedButtonId === 'payway1') {
                    payway = 1;
                    submitdata.paymentNo = 1;
                } else if (selectedButtonId === 'payway2') {
                    payway = 2;
                    submitdata.paymentNo = 2;
                }
            });

            updatePaywaySelection('payway1');



            const loadCoinTotal = async () => {

                const memberSid = searchData.Msid;
                const api = `@Url.Content("~/Frontstage/CartsAPI/GetTotal?memberSid=${memberSid}")`;

                try {

                    const response = await fetch(api, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    const data = await response.json();

                    const span = document.getElementById('coinAmount');
                    span.innerHTML = data;

                    const inputElement = document.getElementById('amountInput');
                    const coinUseSpan = document.querySelector('.coin_use span');
                    const couponUseSpan = document.querySelector('.coupon_use span');
                    const endPriceSpan = document.querySelector('.end_orders_price span');
                    const payEndSpan = document.querySelector('.pay_end_total span');


                    const initialPrice = parseFloat(endPriceSpan.textContent.replace('NT$', '').replace(/,/g, ''));
                    const initialPrice2 = parseFloat(payEndSpan.textContent.replace('NT$', '').replace(/,/g, ''));


                    inputElement.setAttribute('max', data);



                    let finalPrice = initialPrice;
                    let payPrice = initialPrice2;
                    let debounceTimer;

                    const updatePrices = (value) => {
                        const discount = value;
                        finalPrice = initialPrice - discount;


                        coinUseSpan.textContent = `- $ ${discount}`;
                         couponUseSpan.textContent = '- $ 0';
                        endPriceSpan.textContent = `$ ${finalPrice.toFixed(0)}`;

                        const carriersPriceSpan = document.querySelector('.carriers_price span');
                        const initialcarriersPrice = parseFloat(carriersPriceSpan.textContent.replace('$', '').replace(/,/g, ''));
                        console.log("initialcarriersPrice", initialcarriersPrice)

                        payPrice = finalPrice + initialcarriersPrice;
                        payEndSpan.textContent = `NT$ ${payPrice.toFixed(0)}`;

                    };


                    const logFinalPrice = () => {
                        console.log("finalPrice", finalPrice);
                        $('#div3').empty();


                        const generateStoresHtml = () => {
                            return `
                                 <select class="select-n " name="state" id="couponSelect">
                                            <option value="null">無需使用優惠券</option>
                                 </select>
                         `;
                        };

                        const divSpots = document.getElementById('div3');
                        divSpots.innerHTML = generateStoresHtml();
                         loadCoupons(finalPrice);




                    };


                    const debounce = (func, delay) => {
                        return (...args) => {
                            clearTimeout(debounceTimer);
                            debounceTimer = setTimeout(() => func(...args), delay);
                        };
                    };


                    const debouncedLogFinalPrice = debounce(logFinalPrice, 300);

                    inputElement.addEventListener('input', () => {
                        let value = parseInt(inputElement.value, 10);

                        if (isNaN(value)) {

                            inputElement.value = '';
                            updatePrices(0);
                        } else if (value < 0) {

                            inputElement.value = 0;
                            updatePrices(0);
                        } else if (value > data) {

                            inputElement.value = data;
                            updatePrices(data);
                        } else {

                            inputElement.value = value;
                            updatePrices(value);
                        }


                        debouncedLogFinalPrice();
                    });
                    updatePrices(0);





                } catch (error) {
                    console.error('Fetch error:', error);
                }
            };


            const BuyData2 = {
                "Msid": 1,
                "totalMoney": 200
            }



            let choicesInstance;

            const loadCoupons = async (totalMoney) => {
                console.log('Total Money:', totalMoney);

                try {
                    const response = await fetch(`https://localhost:7080/Frontstage/CartsAPI/GetCoupons?memberSid=1&totalmoney=${totalMoney}`);
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    const coupons = await response.json();


                    const selectElement = document.getElementById('couponSelect');
                    if (!selectElement) {
                        console.error('Select element not found');
                        return;
                    }


                    selectElement.innerHTML = '';
                    console.log("selectElement.innerHTML", selectElement.innerHTML)


                    const noCouponOption = document.createElement('option');
                    noCouponOption.value = 'null';
                    noCouponOption.textContent = '無需使用優惠券';
                    selectElement.appendChild(noCouponOption);


                    coupons.forEach(coupon => {
                        const option = document.createElement('option');
                        option.value = `${coupon.couponSid}|${coupon.price}`;
                        option.textContent = `${coupon.name} `;
                        option.dataset.price = coupon.price;
                        if (coupon.minimum > totalMoney) {
                            option.disabled = true;
                            option.textContent = `${coupon.name} (低消，需滿 NT$${coupon.minimum.toFixed(0)})`;
                        }
                        selectElement.appendChild(option);
                    });



                    const couponUseSpan = document.querySelector('.coupon_use span');
                    const endPriceSpan = document.querySelector('.end_orders_price span');
                    const payEndSpan = document.querySelector('.pay_end_total span');


                    selectElement.addEventListener('change', (event) => {
                        const selectedValue = event.target.value;
                        const carriersPriceSpan = document.querySelector('.carriers_price span');
                        const initialcarriersPrice = parseFloat(carriersPriceSpan.textContent.replace('$', '').replace(/,/g, ''));
                        console.log(" initialcarriersPrice123", initialcarriersPrice)
                        const [couponSid, price] = selectedValue.split('|');
                        console.log('Coupon SID:', couponSid);
                        console.log('Price:', price);

                        submitdata.couponSid = couponSid;

                        if (selectedValue === 'null') {

                            couponUseSpan.textContent = '- $ 0';

                            const carriersPriceSpan = document.querySelector('.carriers_price span');
                            const initialcarriersPrice = parseFloat(carriersPriceSpan.textContent.replace('$', '').replace(/,/g, ''));
                            const discountAmount = 0;
                            const finalPrice = totalMoney - discountAmount;
                            const payPrice = finalPrice + initialcarriersPrice;
                            endPriceSpan.textContent = ` $ ${finalPrice.toFixed(2)}`;
                            payEndSpan.textContent = `NT$ ${payPrice.toFixed(0)}`;
                            console.log(" initialcarriersPrice", initialcarriersPrice)

                            return;
                        }




                        console.log("submitdata", submitdata)

                        couponUseSpan.textContent = `- $ ${parseFloat(price).toFixed(2)}`;


                        const discountAmount = parseFloat(price);
                        const finalPrice = totalMoney - discountAmount ;
                         const payPrice = finalPrice + initialcarriersPrice;

                        endPriceSpan.textContent = ` $ ${finalPrice.toFixed(2)}`;
                        payEndSpan.textContent = `NT$ ${payPrice.toFixed(0)}`;
                    });

                    if (choicesInstance) {
                        choicesInstance.destroy();
                    }

                    choicesInstance = new Choices(selectElement, {
                        searchEnabled: false,
                        itemSelectText: '',
                        shouldSort: false
                    });

                } catch (error) {
                    console.error('Error loading coupons:', error);
                }
            };





            $('.payway-btn').on('click', function () {
                const selectedButtonId = this.id;
                updatePaywaySelection(selectedButtonId);


                if (selectedButtonId === 'payway1') {
                    payway = 1;
                } else if (selectedButtonId === 'payway2') {
                    payway = 2;
                }
            });




            // const updatePrices = async () => {
            //     const apiUrl = 'https://localhost:7080/Frontstage/CartsAPI/UpdatePrices';

            //     const data = {
            //         memberSid: 1,
            //         stores: [
            //             {
            //                 storeSid: 11,
            //                 addressSid: 4,
            //                 cart: [22]
            //             },
            //             {
            //                 storeSid: 1,
            //                 addressSid: 4,
            //                 cart: [18]
            //             }
            //         ],
            //         combo: 0.9,
            //         usecoin: 0,
            //         paymentNo: 1
            //     };

            //     try {
            //         const response = await fetch(apiUrl, {
            //             method: 'POST',
            //             headers: {
            //                 'Content-Type': 'application/json'
            //             },
            //             body: JSON.stringify(data)
            //         });

            //         if (!response.ok) {
            //             throw new Error('Network response was not ok');
            //         }

            //         const result = await response.json();
            //         console.log('Success:', result);
            //     } catch (error) {
            //         console.error('Error:', error);
            //     }
            // };

            // // 假設你有一個按鈕來觸發這個函數
            // document.getElementById('updatePricesButton').addEventListener('click', updatePrices);


            // 監聽所有目標元素的變化




            function updateSubmitData() {
                const discountText = document.querySelector('#part-2 .percent_discount span').textContent.trim();
                submitdata.combo = discountText === '無' ? 1 : 0.9;

                const coinText = document.querySelector('#part-2 .coin_use span').textContent.replace(/[^0-9]/g, '').trim();
                submitdata.usecoin = parseInt(coinText, 10) || 0; // 确保是整数


            }


            const updatePrices = async () => {
                const apiUrl = 'https://localhost:7080/Frontstage/CartsAPI/UpdatePrices';

                updateSubmitData();

                console.log("submitdata", submitdata)

                try {
                    const response = await fetch(apiUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(submitdata)
                    });

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    const result = await response.json();
                    console.log('Success:', result);

                    // 只提取需要传递的数据
                    const postData = {
                        combo: result.combo,
                        usecoin: result.usecoin,
                        couponSid: result.couponSid,
                        paymentNo: result.paymentNo,
                        orderNumbers: result.orderNumbers
                    };

                    // 创建一个隐藏表单并提交
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = 'https://localhost:7080/Frontstage/carts/checkout';

                    // 将数据添加到表单
                    for (const key in postData) {
                        if (postData.hasOwnProperty(key)) {
                            const hiddenField = document.createElement('input');
                            hiddenField.type = 'hidden';
                            hiddenField.name = key;
                            hiddenField.value = Array.isArray(postData[key])
                                ? JSON.stringify(postData[key])
                                : postData[key];
                            form.appendChild(hiddenField);
                        }
                    }

                    document.body.appendChild(form);
                    form.submit(); // 提交表单，进行跳转

                } catch (error) {
                    console.error('Error:', error);
                }
            };

            // 假设你有一个按钮来触发这个函数
            document.getElementById('updatePricesButton').addEventListener('click', updatePrices);









        });






    </script>
}

