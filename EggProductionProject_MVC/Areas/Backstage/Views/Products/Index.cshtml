@model IEnumerable<EggProductionProject_MVC.Models.Product>


@{
    ViewData["Title"] = "Index";
}

@section Styles {

    <style>
        .table-hover tbody tr:hover {
            background-color: #f0e68c; /* 淡黄色背景 */
            color: #333333; /* 深色文字 */
        }

        .textalign-left {
            text-align: left;
        }

        .bold-text {
            font-weight: bold;
            font-size: 28px;
        }

        .text-center {
            text-align: center; /* 水平置中 */
        }

        .align-middle {
            vertical-align: middle; /* 垂直置中 */
        }
    </style>

}

<h2 class="bold-text">商品清單</h2>
<div class="card p-4">
    @* 查詢商品表單 *@
    <div class="d-flex justify-content-end mb-3">
        <input type="text" id="searchString" class="form-control" placeholder="查詢商品" style="width: 250px; margin-right: 15px;" />
        <button type="button" id="searchButton" class="btn btn-secondary">
            <i class="fa-solid fa-search"></i>
        </button>
    </div>

    <div id="productList">
        <table class="table table container text-center table-striped table-hover">
            <thead>
                <tr>
                    @*             <th>
                    @Html.DisplayNameFor(model => model.StoreS)
                    </th> *@
                    <th>
                        商品編號
                        @* @Html.DisplayNameFor(model => model.ProductNo) *@
                    </th>
                    <th style="width: 10%">
                        商品名稱
                    </th>
                    <th>
                        原價
                    </th>
                    <th style="width: 5%">
                        庫存
                    </th>
                    @*             <th>
                    @Html.DisplayNameFor(model => model.ItemNo)
                    </th> *@
                    <th style="width: 20%">
                        商品描述
                    </th>
                    @*             <th>
                    @Html.DisplayNameFor(model => model.Origin)
                    </th> *@
                    @*             <th>
                    @Html.DisplayNameFor(model => model.Quanitity)
                    </th>
                    <th>
                    @Html.DisplayNameFor(model => model.Weight)
                    </th> *@
                    <th style="width: 15%">
                        內容物成分
                        @* @Html.DisplayNameFor(model => model.Component) *@
                    </th>
                    <th>
                        上架時間
                        @*                 @Html.DisplayNameFor(model => model.LaunchTime) *@
                    </th>
                    <th style="width: 10%">
                        公開狀態
                        @* @Html.DisplayNameFor(model => model.PublicStatusNoNavigation) *@
                    </th>
                    @*             <th>
                    @Html.DisplayNameFor(model => model.SubcategoryNoNavigation)
                    </th> *@
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        @*                 <td>
                    @Html.DisplayFor(modelItem => item.StoreS.StoreSid)
                    </td> *@
                        <td class="text-center align-middle">
                            @Html.DisplayFor(modelItem => item.ProductNo)
                        </td>
                        <td class="text-center align-middle">
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>
                        <td class="text-center align-middle">
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td class="text-center align-middle">
                            @Html.DisplayFor(modelItem => item.Stock)
                        </td>
                        @*             <td>
                    @Html.DisplayFor(modelItem => item.ItemNo)
                    </td> *@
                        <td class="textalign-left align-middle">
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        @*             <td>
                    @Html.DisplayFor(modelItem => item.Origin)
                    </td> *@
                        @*             <td>
                    @Html.DisplayFor(modelItem => item.Quanitity)
                    </td> *@
                        @*             <td>
                    @Html.DisplayFor(modelItem => item.Weight)
                    </td> *@
                        <td class="textalign-left align-middle">
                            @Html.DisplayFor(modelItem => item.Component)
                        </td>
                        <td class="text-center align-middle">
                            @Html.DisplayFor(modelItem => item.LaunchTime)
                        </td>
                        <td class="text-center align-middle">
                            @Html.DisplayFor(modelItem => item.PublicStatusNoNavigation.StatusDescription)
                        </td>
                        @*                 <td>
                    @Html.DisplayFor(modelItem => item.SubcategoryNoNavigation.SubcategoryNo)
                    </td> *@
                        <td class="text-center align-middle">
                            <button type="button" class="btn btn-secondary btn-sm" onclick="location.href='@Url.Action("Edit", new { id = item.ProductSid })'">
                                <i class="fa-solid fa-edit"></i> 狀態變更
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var storeSelect = document.getElementById("StoreSid");
            var showProductList = document.getElementById("productList");

            storeSelect.addEventListener("change", async function () {
                // alert('有綁定成功')
                var StoreSid = storeSelect.value;
                // console.log(StoreSid) 確定有無綁定成功
                var url = '@Url.Action("GetProductsByStoreSid", "Products")';

                try {
                    let response = await fetch(url + '?StoreSid=' + StoreSid);

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    let html = await response.text();
                    productList.innerHTML = html;
                } catch (error) {
                    console.error('There was a problem with the fetch operation:', error);
                }
            });
        });

        // 關鍵字查詢局部更新
        document.getElementById("searchButton").addEventListener("click", async function () {
            var inputSearchString = document.getElementById("searchString")
            var searchString = inputSearchString.value;

            // 如果搜索字符串為空，返回全部賣場
            var url;
            if (searchString.trim() === "") {
                url = '@Url.Action("GetAllProducts", "Products")'; // 獲取全部賣場的 Action
            } else {
                url = '@Url.Action("SearchProducts", "Products")?searchString=' + encodeURIComponent(searchString);
            }

            try {
                let response = await fetch(url);

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                let html = await response.text();
                document.getElementById("productList").innerHTML = html;

                //清空輸入框內容
                inputSearchString.value = "";
            } catch (error) {
                console.error('Error:', error);
            }
        });
    </script>

}